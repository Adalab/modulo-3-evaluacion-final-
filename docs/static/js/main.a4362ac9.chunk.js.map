{"version":3,"sources":["services/api.js","services/local-storages.js","images/RickandMorty.png","components/Header.js","components/FilterCharName.js","components/FilterCharSpecie.js","components/Filters.js","components/RenderCharDetails.js","components/CharNotFound.js","components/RenderCharList.js","images/notFound2.PNG","components/PageNotFound.js","components/CharCard.js","components/Footer.js","components/App.js","index.js"],"names":["objectToExport","callToApi","fetch","then","response","json","results","map","char","name","species","image","id","status","episode","origin","get","key","defaultValue","localStorageData","localStorage","getItem","JSON","parse","set","value","stringify","setItem","remove","removeItem","clear","Header","className","src","imgLogo","alt","FilterCharName","props","htmlFor","labelText","type","searchName","onChange","ev","handleSearchName","currentTarget","defaultProps","FilterCharSpecie","selectSepecies","handleSelect","Filters","selectSpecies","RenderCharDetails","CharNotFound","RenderCharList","data","length","listHtml","to","PageNotFound","imgNotFound","class","CharCard","undefined","acc","i","enterNum","changeStatus","Footer","App","useState","setData","ls","setSearchName","setSelectSpecies","useEffect","console","log","api","initialData","FilteredData","filter","charName","toLocaleLowerCase","includes","sort","a","b","routeData","useRouteMatch","charId","params","characterId","selectedChar","find","parseInt","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4362ac9.chunk.js","sourcesContent":["// Fichero src/services/api.js\r\n\r\nconst callToApi = () => {\r\n    // Llamamos al API\r\n    return fetch('https://rickandmortyapi.com/api/character/')\r\n        .then(response => response.json())\r\n        .then(response => {\r\n            // Cuando responde el API podemos limpiar los datos aquí\r\n            return response.results\r\n                .map(char => {\r\n                    const result = {\r\n                        name: char.name,\r\n                        species: char.species,\r\n                        image: char.image,\r\n                        id: char.id,\r\n                        status: char.status,\r\n                        episode: char.episode,\r\n                        origin: char.origin.name\r\n\r\n                    }\r\n                    return result;\r\n                })\r\n        });\r\n\r\n};\r\n\r\nconst objectToExport = {\r\n    callToApi: callToApi,\r\n};\r\n\r\nexport default objectToExport;","// Fichero src/services/local-storage.js\r\n\r\n// Función que obtiene una propiedad del local storage\r\n// Si esta propiedad no existe porque es la primera vez que la usuaria entra en la página la función devuelve el valor de defaultValue\r\n// Que esta función devuelva un valor por defecto es una cómoda manera de trabajar, así esta comprobación no la tenemos que hacer App.js\r\nconst get = (key, defaultValue) => {\r\n    const localStorageData = localStorage.getItem(key);\r\n    if (localStorageData === null) {\r\n        return defaultValue;\r\n    } else {\r\n        return JSON.parse(localStorageData);\r\n    }\r\n};\r\n\r\n// Función que guarda una propiedad y su valor en el local storage\r\nconst set = (key, value) => {\r\n    const localStorageData = JSON.stringify(value);\r\n    localStorage.setItem(key, localStorageData);\r\n};\r\n\r\n// Función que borra una propiedad del local storage\r\nconst remove = key => {\r\n    localStorage.removeItem(key);\r\n};\r\n\r\n// Función que limpia todo el local storage\r\nconst clear = () => {\r\n    localStorage.clear();\r\n};\r\n\r\n// Creamos un objeto temporal que es el que queremos exportar\r\n// Este objeto tiene la una propiedad get cuyo valor es la función get\r\n// Este objeto tiene la una propiedad set cuyo valor es la función set\r\n// Este objeto tiene la una propiedad remove cuyo valor es la función remove\r\n// Este objeto tiene la una propiedad clear cuyo valor es la función clear\r\nconst objectToExport = {\r\n    get: get,\r\n    set: set,\r\n    remove: remove,\r\n    clear: clear\r\n};\r\n\r\n// Exportamos el objeto para que pueda ser usado desde App\r\nexport default objectToExport;","export default __webpack_public_path__ + \"static/media/RickandMorty.de13d484.png\";","import imgLogo from \"../images/RickandMorty.png\";\r\nimport \"../styles/layout/Header.scss\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <>\r\n            <header className=\"header\">\r\n                <img\r\n                    className=\"header__imageLogo\"\r\n                    src={imgLogo}\r\n                    alt=\"Imagen Rick and Morty\"\r\n                />\r\n                <h1 className=\"header__title\">\r\n                    Welcome to Rick & Morty Search browser\r\n                </h1>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst FilterCharName = (props) => {\r\n    const handleChangeName = (ev) => {\r\n        props.handleSearchName(ev.currentTarget.value)\r\n    }\r\n    return (\r\n        <>\r\n            <label htmlFor={props.id} className='form__labelText'>{props.labelText}</label>\r\n            <input className='form__searchName'\r\n                type={props.type}\r\n                name={props.name}\r\n                id={props.id}\r\n                value={props.searchName}\r\n                onChange={handleChangeName}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nFilterCharName.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nFilterCharName.propTypes = {\r\n    labelText: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.string,\r\n    value: PropTypes.string,\r\n    handleSearchName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default FilterCharName;\r\n","const FilterCharSpecie = (props) => {\r\n    const changeHandleSelect = (ev) => {\r\n        props.handleSelect(ev.currentTarget.value)\r\n    }\r\n    return (\r\n        <>\r\n            <label htmlFor=\"species\" className='form__labelText'>Select species here</label>\r\n            <select className='form__searchSpecies'\r\n                name=\"species\"\r\n                id=\"species\"\r\n                value={props.selectSepecies}\r\n                onChange={changeHandleSelect}\r\n            >\r\n                <option value=\"All\">All</option>\r\n                <option value=\"Human\">Human</option>\r\n                <option value=\"Alien\">Alien</option>\r\n            </select>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FilterCharSpecie;\r\n","import FilterCharName from \"./FilterCharName\";\r\nimport FilterCharSpecie from \"./FilterCharSpecie\";\r\nimport '../styles/layout/Filters.scss';\r\n\r\nconst Filters = (props) => {\r\n    return (\r\n        <form className=\"form\">\r\n            <FilterCharName\r\n                searchName={props.searchName}\r\n                handleSearchName={props.handleSearchName}\r\n                labelText='Type name here'\r\n                type=\"text\"\r\n                name=\"name\"\r\n                id=\"name\"\r\n            />\r\n            <FilterCharSpecie\r\n                selectSpecies={props.selectSepecies}\r\n                handleSelect={props.handleSelect}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default Filters;\r\n","const RenderCharDetails = (props) => {\r\n    return (\r\n        <>\r\n            <div className=\"wrapper__listChar--wrap\">\r\n                <img\r\n                    className=\"wrapper__listChar--imageChar\"\r\n                    src={props.char.image}\r\n                    alt={props.char.name}\r\n                />\r\n                <div className=\"wrapper__listChar--styleContent\">\r\n                    <p className=\"wrapper__listChar--textName\">\r\n\r\n                        Name: <strong>{props.char.name}</strong>\r\n                    </p>\r\n                    <p className=\"wrapper__listChar--textSpecie\">\r\n                        Specie: <strong>{props.char.species}</strong>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default RenderCharDetails;\r\n","import { Link } from \"react-router-dom\";\r\nimport '../styles/layout/NotFound.scss';\r\n\r\nconst CharNotFound = () => {\r\n    return (<>\r\n        <section className='wrapperNotFound'>\r\n            <p className='wrapperNotFound__errorText'>CHARACTER NOT FOUND</p>\r\n            <p>Type new name again </p>\r\n        </section>\r\n    </>);\r\n}\r\n\r\nexport default CharNotFound;","import { Link } from \"react-router-dom\";\r\nimport RenderCharDetails from \"./RenderCharDetails\";\r\nimport '../styles/layout/RenderCharList.scss';\r\nimport CharNotFound from \"./CharNotFound\";\r\n\r\nconst RenderCharList = (props) => {\r\n    // esta condicional nos indica que hacer si el nb q escribe la usuaria no coincide con lo que hay en el array, pinta char not found\r\n    if (props.data.length === 0) {\r\n        return <CharNotFound />\r\n        //si el char esta en lal ista lo pinta \r\n    } else {\r\n        const listHtml = props.data\r\n            .map((char) => (\r\n                <li key={char.id} className=\"wrapper__listChar\">\r\n                    <Link to={`/character/${char.id}`} className='mainWrapper__link'>\r\n                        <RenderCharDetails char={char} />\r\n                    </Link>\r\n                </li>\r\n            ))\r\n\r\n\r\n        return <section className='mainWrapper'> <ul className='wrapper'> {listHtml}</ul></section>;\r\n    }\r\n};\r\n\r\n\r\nexport default RenderCharList;\r\n","export default __webpack_public_path__ + \"static/media/notFound2.a7989f37.PNG\";","import { Link } from \"react-router-dom\";\r\nimport \"../styles/layout/NotFound.scss\";\r\nimport imgNotFound from \"../images/notFound2.PNG\";\r\n\r\nconst PageNotFound = () => {\r\n    return (\r\n        <>\r\n            <section className=\"wrapperNotFound\">\r\n                <img\r\n                    className=\"wrapperNotFound__img\"\r\n                    src={imgNotFound}\r\n                    alt=\"notFound\"\r\n                />\r\n                <Link to=\"/\" className=\"wrapperNotFound__returnText\">\r\n                    <i class=\"fas fa-hand-point-left\"></i> Return to homepage\r\n                </Link>\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageNotFound;\r\n","import { Link } from \"react-router-dom\";\r\nimport \"../styles/layout/CharCard.scss\";\r\nimport PageNotFound from \"./PageNotFound\";\r\n\r\nconst CharCard = (props) => {\r\n    function changeStatus() {\r\n        const status = props.char.status;\r\n        if (status === \"Alive\") {\r\n            return (\r\n                <p>\r\n                    Status: <i class=\"fab fa-reddit-alien\"></i>\r\n                </p>\r\n            );\r\n        } else if (status === \"Dead\") {\r\n            return (\r\n                <p>\r\n                    Status: <i class=\"fas fa-skull-crossbones\"></i>\r\n                </p>\r\n            );\r\n        } else {\r\n            return (\r\n                <p>\r\n                    Status: <i class=\"far fa-question-circle\"></i>\r\n                </p>\r\n            );\r\n        }\r\n    }\r\n\r\n    function enterNum() {\r\n        let acc = 0;\r\n        let episode = props.char.episode;\r\n        for (let i = 0; i < episode.length; i++) {\r\n            acc = i + 1;\r\n        }\r\n        return acc;\r\n    }\r\n\r\n    if (props.char === undefined) {\r\n        return (\r\n            <>\r\n                <PageNotFound />\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n                <section className=\"wrapperCharCard\">\r\n                    <div className=\"wrapperCharCard__link\">\r\n                        <Link to=\"/\" className=\"wrapperCharCard__link--text\">\r\n                            Volver\r\n                        </Link>\r\n                    </div>\r\n\r\n                    <div className=\"wrapperCharCard__description\">\r\n                        <img\r\n                            className=\"wrapperCharCard__description--img\"\r\n                            src={props.char.image}\r\n                            alt={props.char.name}\r\n                        />\r\n                        <ul className=\"wrapperCharCard__description--listChar\">\r\n                            <li> Name: {props.char.name}</li>\r\n                            <li> Specie: {props.char.species}</li>\r\n                            <li> Origin: {props.char.origin}</li>\r\n                            <li> episodes: {enterNum()}</li>\r\n                            <li> {changeStatus()} </li>\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n            </>\r\n        );\r\n    }\r\n};\r\n\r\nexport default CharCard;\r\n","import imgLogo from \"../images/RickandMorty.png\";\r\nimport \"../styles/layout/Footer.scss\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <>\r\n            <footer className=\"footer\">\r\n                <h1 className=\"footer__title\">  Rick & Morty Search browser </h1>\r\n                <p className=\"footer__description\">by SaraRid</p>\r\n            </footer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","// Fichero src/components/App.js\r\nimport \"../styles/Reset.scss\";\r\nimport \"../styles/App.scss\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\nimport api from \"../services/api\"; // Importamos el servicio que acabamos de crear\r\nimport { Switch, useRouteMatch, Route } from \"react-router-dom\";\r\nimport ls from \"../services/local-storages\";\r\n\r\n//importar componentes:\r\nimport Header from \"./Header\";\r\nimport Filters from \"./Filters\";\r\nimport RenderCharList from \"./RenderCharList\";\r\nimport CharCard from \"./CharCard\";\r\nimport PageNotFound from \"./PageNotFound\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction App() {\r\n  const [data, setData] = useState([]);\r\n  const [searchName, setSearchName] = useState(ls.get(\"name\", \"\"));\r\n  const [selectSepecies, setSelectSpecies] = useState(\"All\");\r\n\r\n\r\n  useEffect(() => {\r\n    if (ls.get('char', []).length > 0) {\r\n      console.log(ls.get('char', []));\r\n      setData(ls.get('char', []));\r\n    } else {\r\n      api.callToApi().then((initialData) => {\r\n        console.log(initialData);\r\n        setData(initialData);\r\n        ls.set('char', initialData);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  //GUARDAR NAME EN LOCAL STORAGE\r\n  useEffect(() => {\r\n    ls.set(\"name\", searchName);\r\n  }, [searchName]);\r\n  // FUNCTION INPUTS SEARCH NAME AND SELECT INPUT\r\n\r\n  const handleSearchName = (value) => {\r\n    setSearchName(value);\r\n  };\r\n\r\n  const handleSelect = (value) => {\r\n    setSelectSpecies(value);\r\n  };\r\n\r\n  //filter\r\n\r\n  const FilteredData = data\r\n\r\n    .filter((char) => {\r\n      const charName = char.name\r\n        .toLocaleLowerCase()\r\n        .includes(searchName.toLocaleLowerCase());\r\n      if (charName === false) {\r\n        return console.log('error');\r\n      } else {\r\n        return charName;\r\n      }\r\n    })\r\n\r\n    .filter(\r\n      (char) => selectSepecies === \"All\" || selectSepecies === char.species\r\n    )\r\n    .sort((a, b) => {\r\n      if (a.name > b.name) {\r\n        return 1;\r\n      }\r\n      if (a.name < b.name) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n\r\n  //ROUTER\r\n  const routeData = useRouteMatch(\"/character/:characterId\");\r\n  console.log(routeData)\r\n  const charId = routeData != null ? routeData.params.characterId : \"\";\r\n  const selectedChar = data.find((char) => {\r\n    return char.id === parseInt(charId);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <main className='main'>\r\n            <Filters\r\n              searchName={searchName}\r\n              selectSepecies={selectSepecies}\r\n              handleSearchName={handleSearchName}\r\n              handleSelect={handleSelect}\r\n            />\r\n            <RenderCharList data={FilteredData} />\r\n          </main>\r\n        </Route>\r\n\r\n        <Route path=\"/character/:characterId\">\r\n          <CharCard char={selectedChar} />\r\n        </Route>\r\n\r\n        <Route>\r\n          <PageNotFound />\r\n        </Route>\r\n      </Switch>\r\n      <Footer />\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// Fichero src/index.js (código nuevo)\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport App from './components/App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);"],"sourceRoot":""}